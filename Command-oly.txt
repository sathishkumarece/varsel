sudo apt-get update
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install nodejs

sudo apt-get install build-essential

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
sudo apt-get update
sudo apt-get install mongodb-org
sudo systemctl start mongod
sudo systemctl enable mongod
mongo
> use admin
switched to db admin
> db.createUser(
  {
    user: "varsel",
    pwd: "varsel'sSecPass",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)

sudo nano /etc/mongod.conf
security:
  authorization: "enabled"
  
sudo systemctl restart mongod

mongo -u varsel -p --authenticationDatabase admin
use varseldb
db.createUser(
  {
    user: "varselUser",
    pwd: "pass$Varsel",
    roles: [ { role: "readWrite", db: "varseldb" } ]
  }
)


sudo apt-get update
sudo apt-get install git
git config --global user.name "Sathishkumar NATARAJ"
git config --global user.email "sathishkumarece@gmail.com"
git config --list
git clone https://github.com/sathishkumarece/varsel.git



sudo apt-get install bc
sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt

dig +short varsel.tk
cd /opt/letsencrypt/
./certbot-auto certonly --standalone
/opt/letsencrypt/certbot-auto renew

sudo crontab -e
00 1 * * 1 /opt/letsencrypt/certbot-auto renew >> /var/log/letsencrypt-renewal.log
30 1 * * 1 /bin/systemctl reload nginx

sudo apt-get install nginx
sudo cp /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default.bak
sudo nano /etc/nginx/sites-enabled/default
<<-
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}
->>
sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

sudo nano /etc/nginx/snippets/ssl-params.conf
<<-
# See https://cipherli.st/ for details on this configuration
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off; # Requires nginx >= 1.5.9
ssl_stapling on; # Requires nginx >= 1.3.7
ssl_stapling_verify on; # Requires nginx => 1.3.7
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

# Add our strong Diffie-Hellman group
ssl_dhparam /etc/ssl/certs/dhparam.pem;
->>

sudo nano /etc/nginx/sites-enabled/default
<<-
# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name varsel.tk;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/varsel.tk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/varsel.tk/privkey.pem;

    # Include the SSL configuration from cipherli.st
    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:1516/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}
->>
sudo nginx -t
sudo systemctl start nginx

cd varsel
npm install
DATABASE_SERVICE_NAME='mongodb' MONGODB_SERVICE_PORT='27017' MONGODB_PASSWORD='pass$Varsel' MONGODB_DATABASE='varseldb'  MONGODB_SERVICE_HOST='127.0.0.1' MONGODB_USER='varselUser' npm start